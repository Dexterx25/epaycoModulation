{"version":3,"file":"controller.js","sourceRoot":"","sources":["../../../src/MSV_epayco/components/controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA,8DAAmG;AAEnG,oDAAiC;AACjC,sDAAiD;AACjD,IAAI,MAAM,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACpC,MAAM,EAAE,cAAM,CAAC,UAAU,CAAC,UAAU;IACpC,UAAU,EAAE,cAAM,CAAC,UAAU,CAAC,WAAW;IACzC,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;CACb,CAAC,CAAC;AAEH,mBAAyB,aAAiB,EAAE,aAAiB;IACzD,IAAI,KAAK,GAAG,aAAa,CAAA;IACzB,IAAI,KAAK,GAAG,aAAa,CAAA;IAEzB,IAAG,CAAC,KAAK,EAAE;QACL,KAAK,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAA;KAC5C;IACD,IAAG,CAAC,KAAK,EAAE;QACP,KAAK,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAA;KAC1C;IACH,IAAI,KAAK,GAAG,QAAQ,CAAA;IAEtB,SAAe,MAAM,CAAE,EAAC,KAAK,EAAE,IAAI,EAAK;;YACvC,OAAO,IAAI,OAAO,CAAC,CAAM,OAAO,EAAE,MAAM,EAAC,EAAE;gBACxC,MAAM,eAAe,GAAG,MAAM,iBAAS,CAAC,KAAK,CAAC,CAAA;gBAC9C,IAAG,eAAe,EAAC;oBACX,MAAM,CAAC,EAAC,GAAG,EAAC,eAAe,EAAC,CAAC,CAAC;oBAC9B,OAAO,KAAK,CAAC;iBAChB;gBACN,IAAI,cAAoB,CAAA;gBACxB,IAAI,IAAU,CAAA;gBAEb,IAAG;oBACC,IAAG,IAAI,IAAI,cAAc,EAAC;wBACtB,IAAI,GAAG,EAAC,cAAc,EAAE,KAAK,CAAC,WAAW,EAAE,gBAAgB,EAAE,KAAK,CAAC,QAAQ,EAAE,iBAAiB,EAAE,KAAK,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,GAAG,EAAC,CAAA;wBACxI,cAAc,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;qBACjD;yBAAK,IAAG,IAAI,IAAI,iBAAiB,EAAC;wBACjC,IAAI,GAAG,IAAI,eAAS,CAAC,KAAK,CAAC,CAAA;wBAC3B,cAAc,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;qBACrD;yBAAK,IAAI,IAAI,IAAI,gCAAgC,EAAC;wBACjD,cAAc,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;qBAC3D;oBACP,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,cAAc,CAAC,CAAA;oBACrD,OAAO,CAAC,cAAc,CAAC,CAAA;iBACtB;gBAAA,OAAM,CAAC,EAAE;oBACN,MAAM,yBAAiB,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAA;iBAC5D;YACH,CAAC,CAAA,CAAC,CAAA;QACJ,CAAC;KAAA;IAED,SAAe,IAAI,CAAC,IAAQ;;YAC3B,OAAO,IAAI,OAAO,CAAC,CAAM,OAAO,EAAE,MAAM,EAAE,EAAE;gBAC3C,IAAI,KAAK,GAAI,MAAM,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;gBACnC,IAAG,CAAC,KAAK,EAAC;oBACN,KAAK,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAA;oBACnC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;iBAC9B;qBAAI;oBACH,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAA;iBAC1C;gBACD,OAAO,CAAC,KAAK,CAAC,CAAA;YAChB,CAAC,CAAA,CAAC,CAAA;QACH,CAAC;KAAA;IAED,SAAe,GAAG,CAAC,IAAQ;;YACzB,OAAO,IAAI,OAAO,CAAE,CAAO,OAAO,EAAE,MAAM,EAAC,EAAE;gBAC3C,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAA;gBACpB,MAAM,OAAO,GAAG,EAAC,IAAI,EAAC,SAAS,EAAE,MAAM,EAAC,MAAM,EAAC,CAAA;gBAC/C,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAA;gBAClC,IAAI,IAAI,GAAQ,MAAM,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAA;gBAC/C,IAAG,CAAC,IAAI,EAAC;oBACL,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAA;oBAClD,IAAI,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;oBAC1C,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;iBAC5B;gBACJ,OAAO,CAAC,IAAI,CAAC,CAAA;YAClB,CAAC,CAAA,CAAC,CAAA;QAEJ,CAAC;KAAA;IAED,SAAe,MAAM,CAAC,OAAW;;YAEjC,OAAO,IAAI,OAAO,CAAE,CAAM,OAAO,EAAE,MAAM,EAAE,EAAE;gBAC3C,MAAM,eAAe,GAAG,MAAM,iBAAS,CAAC,OAAO,CAAC,CAAA;gBAC9C,IAAG,eAAe,EAAC;oBAChB,MAAM,CAAC,EAAC,GAAG,EAAC,eAAe,EAAC,CAAC,CAAC;oBAC9B,OAAO,KAAK,CAAC;iBACf;gBAED,IAAI,IAAI,GAAG,IAAI,eAAS,CAAC,OAAO,CAAC,CAAA;gBAEnC,IAAI;oBACF,MAAM,UAAU,GAAI,MAAO,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA;oBACpE,OAAO,CAAC,UAAU,CAAC,CAAA;iBACpB;gBAAC,OAAO,KAAK,EAAE;oBACd,yBAAiB,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAA;iBACvD;YAEF,CAAC,CAAA,CAAC,CAAA;QACH,CAAC;KAAA;IAED,SAAe,MAAM,CAAC,KAAS;;YAC7B,OAAO,IAAI,OAAO,CAAE,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE;gBAC1C,IAAG,CAAC,KAAK,EAAC;oBACR,MAAM,CAAE,EAAC,GAAG,EAAC,mBAAmB,EAAC,CAAC,CAAC;oBACnC,OAAO,KAAK,CAAC;iBACd;gBACF,IAAI;oBACH,MAAM,MAAM,GAAK,MAAO,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;oBACpD,OAAO,MAAM,CAAA;iBACf;gBAAC,OAAO,KAAK,EAAE;oBACZ,yBAAiB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;iBAC3D;YACJ,CAAC,CAAA,CAAC,CAAA;QACJ,CAAC;KAAA;IAED,OAAO;QACL,MAAM;QACN,IAAI;QACJ,GAAG;QACH,MAAM;QACN,MAAM;KACP,CAAA;AAED,CAAC;AAjHD,4BAiHC","sourcesContent":["import bcrypt from \"bcrypt\"\nimport  controllerAuth from \"../../api/components/auth/index\"\nimport {midlleHandleError, Validator, ConvertingsId_type} from \"../../utils/actions/personas/index\"\nimport * as auth from \"../../authorizations/index\"\nimport  userModel from \"./model\";\nimport {config} from '../../configurations/index'\nlet epayco = require('epayco-sdk-node')({\n    apiKey: config.msv_epayco.public_key,\n    privateKey: config.msv_epayco.private_key,\n    lang: 'ES',\n    test: true\n});\n\nexport default function (injectedStore:any, injectedCache:any) {\n    let cache = injectedCache\n    let store = injectedStore\n\n    if(!store ){\n          store = require('../../../store/dummy')\n    }\n    if(!cache ){\n        cache = require('../../../store/dummy')\n    }\n  let table = 'epayco'\n\nasync function insert ({datas, type}:any) {\n return new Promise(async(resolve, reject)=>{   \n    const responValidator = await Validator(datas) \n    if(responValidator){\n            reject({msg:responValidator});\n            return false;\n        }\n   let registerRespon : any\n   let data : any\n  \n    try{\n        if(type == 'create_token'){\n            data = {\"card[number]\": datas.card_number, \"card[exp_year]\": datas.exp_year, \"card[exp_month]\": datas.exp_month, \"card[cvc]\": datas.cvc}\n            registerRespon = await epayco.token.create(data)\n          }else if(type == 'create_customer'){\n            data = new userModel(datas)\n            registerRespon = await epayco.customers.create(data)\n          }else if (type == 'add_new_token_existed_customer'){\n            registerRespon = await epayco.customers.addNewToken(datas)\n          }\n    console.log('RES CONTROLLER AUTH---', registerRespon)\n    resolve(registerRespon)\n    }catch(e) {\n        await midlleHandleError(e, table, datas, resolve, reject)\n    }\n  })\n}\n\nasync function list(data:any){ \n return new Promise(async(resolve, reject) =>{\n  let users  = await cache.list(table)\n   if(!users){\n       users = await epayco.customers.list()\n         cache.upsert(users, table)\n    }else{\n      console.log('datos traidos de la cache')\n   }         \n   resolve(users)\n })\n}\n\nasync function get(data:any){\n  return new Promise( async (resolve, reject)=>{\n    const {filter} = data\n     const theData = {type:'getUser', querys:filter}\n     console.log('the filter--->', filter)\n        let user :any = await cache.get(filter.id, table)\n          if(!user){\n              console.log('no estaba en cachee, buscando en db')\n              user = await epayco.customers.get(data.id)\n              cache.upsert(user, table)\n          }\n       resolve(user)\n  })\n\n}\n\nasync function update(theBody:any){\n\nreturn new Promise (async(resolve, reject) =>{\n  const responValidator = await Validator(theBody)\n    if(responValidator){\n       reject({msg:responValidator});\n       return false;\n    }\n\n    let data = new userModel(theBody)\n\n  try {\n    const dataRespon =  await  epayco.customers.update(theBody.id, data)\n    resolve(dataRespon)\n  } catch (error) {\n    midlleHandleError(error, table, data, resolve, reject)\n  }\n\n })\n}\n\nasync function remove(datas:any) {\n  return new Promise (async (resolve, reject) =>{\n      if(!datas){\n        reject ({msg:'data Not Suplied!'});\n        return false;\n      }\n     try {\n      const respon =   await  epayco.customers.delete(datas)\n        return respon\n     } catch (error) {\n         midlleHandleError(error, table, datas, resolve, reject);\n     }\n  })\n}\n\nreturn {\n  insert,\n  list,\n  get,\n  update,\n  remove\n}\n\n}"]}