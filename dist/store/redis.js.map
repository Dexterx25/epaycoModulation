{"version":3,"file":"redis.js","sourceRoot":"","sources":["../../src/store/redis.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,kDAAyB;AACzB,mDAA8C;AAC9C,MAAM,MAAM,GAAQ,eAAK,CAAC,YAAY,CAAC;IACnC,IAAI,EAAE,cAAM,CAAC,KAAK,CAAC,IAAI;IACvB,IAAI,EAAE,cAAM,CAAC,KAAK,CAAC,IAAI;IACzB,oCAAoC;CACrC,CAAC,CAAC;AACH,SAAS,IAAI,CAAC,KAAY;IACtB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACnC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,GAAO,EAAE,IAAQ,EAAE,EAAE;YACpC,IAAI,GAAG;gBAAE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;YAE5B,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,CAAC;YACvB,IAAI,IAAI,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAAC,CAAA;gBAC5C,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC1B;YACD,OAAO,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC;AAmBG,oBAAI;AAjBR,SAAS,GAAG,CAAC,EAAO,EAAE,KAAa;IAC/B,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAA;IAC9B,OAAO,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;AAClC,CAAC;AAeG,kBAAG;AAbP,SAAe,MAAM,CAAC,IAAQ,EAAE,KAAY;;QACxC,IAAI,GAAG,GAAG,KAAK,CAAC;QAChB,IAAI,IAAI,IAAI,IAAI,CAAC,EAAE,EAAE;YACjB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;SAC7B;QACD,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAA;QAE9C,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5C,OAAO,IAAI,CAAC;IAChB,CAAC;CAAA;AAKG,wBAAM","sourcesContent":["import redis from 'redis'\nimport {config} from '../configurations/index'\nconst client :any = redis.createClient({\n    host: config.redis.host,\n    port: config.redis.port,\n  //  password: config.redis.password,\n});\nfunction list(table:string) {\n    return new Promise((resolve, reject) => {\n        client.get(table, (err:any, data:any) => {\n            if (err) return reject(err);\n\n            let res = data || null;\n            if (data) {\n                console.log('dataaaaaa cache list-->', data)\n                res = JSON.parse(data);\n            }\n            resolve(res);\n        });\n    });\n}\n\nfunction get(id?:any, table?:string) {\n    console.log('entra get Redis')\n    return list(table + '_' + id);\n}\n\nasync function upsert(data:any, table:string) {\n    let key = table;\n    if (data && data.id) {\n        key = key + '_' + data.id;\n    }\n    console.log('dataaaaaa cache upsert-->', data)\n\n    client.setex(key, 10, JSON.stringify(data));\n    return true;\n}\n\nexport  {\n    list,\n    get,\n    upsert,\n};"]}