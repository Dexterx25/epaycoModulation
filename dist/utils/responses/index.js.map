{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/utils/responses/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,kDAAyB;AAEd,QAAA,cAAc,GAAG;IACxB,OAAO,EAAE,UAAgB,GAAW,EAAE,GAAY,EAAE,OAAc,EAAE,SAAgB,GAAG;;YACnF,IAAI,UAAU,GAAG,MAAM,IAAI,GAAG,CAAC;YAC/B,IAAI,aAAa,GAAG,OAAO,IAAI,EAAE,CAAC;YAElC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;gBACxB,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,UAAU;gBAClB,IAAI,EAAE,aAAa;aACtB,CAAC,CAAC;QACP,CAAC;KAAA;IAEA,KAAK,EAAE,UAAe,GAAW,EAAE,GAAY,EAAE,OAAW,EAAE,MAAU;;YACpE,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,CAAC,CAAA;YAC3D,IAAI,UAAU,GAAG,MAAM,IAAI,GAAG,CAAC;YAC/B,IAAI,aAAa,GAAG,OAAO,IAAI,uBAAuB,CAAC;YAEvD,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;gBACxB,KAAK,EAAE,IAAI;gBACX,MAAM,EAAE,UAAU;gBAClB,IAAI,EAAE,aAAa;aACtB,CAAC,CAAC;QACP,CAAC;KAAA;CACJ,CAAA;AAEU,QAAA,eAAe,GAAG;IACzB,KAAK,EAAE,UAAS,OAAW,EAAE,UAAiB;QACzC,OAAO,CAAC,IAAI,CAAC,GAAG,eAAK,CAAC,GAAG,CAAC,4BAA4B,UAAU,OAAO,CAAC,IAAI,eAAK,CAAC,aAAa,CAAC,SAAS,OAAO,EAAE,CAAC,EAAE,CAAC,CAAA;IAC3H,CAAC;IACD,OAAO,EAAG,UAAS,UAAiB,EAAE,OAAc;QAC/C,OAAO,CAAC,IAAI,CAAC,GAAG,eAAK,CAAC,KAAK,CAAC,0BAA0B,UAAU,QAAQ,CAAC,GAAG,eAAK,CAAC,WAAW,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;IACzI,CAAC;CAEJ,CAAA","sourcesContent":["import { Router, Request, Response, NextFunction} from \"express\";\nimport chakl from \"chalk\"\n\nexport let ServerResponse = {\n    success: async function (req:Request, res:Response, message:string, status:number = 200) {\n        let statusCode = status || 200;\n        let statusMessage = message || '';\n    \n        res.status(statusCode).send({\n            error: false,\n            status: statusCode,\n            body: statusMessage,\n        });\n    },\n\n     error: async function(req:Request, res:Response, message:any, status:any) {\n         console.warn('Message--->', message, \"status--->\", status)\n        let statusCode = status || 500;\n        let statusMessage = message || 'Internal server error';\n\n        res.status(statusCode).send({\n            error: true,\n            status: statusCode,\n            body: statusMessage,\n        });\n    }\n}\n\nexport let ConsoleResponse = {\n    error: function(message:any, procedence:string) {\n         console.warn(`${chakl.red(`[Handle Fatal Error >>> (${procedence})] \\n`)} ${chakl.magentaBright(`====> ${message}`)}`)\n    },\n    success : function(procedence:string, message:string){\n         console.warn(`${chakl.green(`[Success Response >>> (${procedence})]  \\n`)}${chakl.greenBright(`====> ${JSON.stringify(message)}`)}`)\n    }\n\n}\n"]}