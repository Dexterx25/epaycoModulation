{"version":3,"file":"convertings.js","sourceRoot":"","sources":["../../../../src/utils/actions/personas/convertings.ts"],"names":[],"mappings":";;;AAAA,SAAiB,kBAAkB,CAAC,mBAAuB,EAAE,IAAW;IACpE,IAAI,eAAqB,CAAA;IACzB,IAAG,IAAI,IAAI,UAAU,EAAC;QAClB,eAAe;YACf,mBAAmB,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBAChC,CAAC,CAAC,mBAAmB,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;oBAClC,CAAC,CAAC,mBAAmB,IAAM,IAAI,CAAC,CAAC,CAAC,CAAC;wBACnC,CAAC,CAAC,mBAAmB,IAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACxC,OAAO,eAAe,CAAA;KACxB;SAAK,IAAG,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI,KAAK,EAAC;QACtC,mBAAmB,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,KAAK;YAClD,CAAC,CAAC,mBAAmB,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,GAAE,KAAK;gBACjD,CAAC,CAAC,mBAAmB,IAAM,CAAC,CAAE,CAAC,CAAC,eAAe,GAAG,IAAI;oBACrD,CAAC,CAAC,mBAAmB,IAAO,CAAC,CAAE,CAAC,CAAE,eAAe,GAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;QACvD,OAAO,eAAe,CAAA;KAChC;AAED,CAAC;AAjBL,gDAiBK","sourcesContent":["export  function ConvertingsId_type(tipo_identificacion:any, type:string){\n    let converterTypeId : any\n    if(type == 'register'){\n        converterTypeId =\n        tipo_identificacion == 'C.C' ? 1\n        : tipo_identificacion == 'C.E' ? 2\n        : tipo_identificacion  ==  'PA' ? 3 \n        : tipo_identificacion  ==   'PE' ? 4 : 0\n        return converterTypeId   \n     }else if(type == 'list' || type == 'get'){\n        tipo_identificacion == 1 ? converterTypeId = 'C.C'\n        : tipo_identificacion == 2 ? converterTypeId ='C.E'\n          : tipo_identificacion  ==  3  ? converterTypeId = 'PA' \n           : tipo_identificacion  ==   4  ?  converterTypeId ='PE' : 0\n               return converterTypeId   \n    }\n          \n    }"]}