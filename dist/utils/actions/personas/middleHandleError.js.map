{"version":3,"file":"middleHandleError.js","sourceRoot":"","sources":["../../../../src/utils/actions/personas/middleHandleError.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+DAAgD;AAChD,mCAAuC;AACvC,SAAsB,iBAAiB,CAAC,CAAK,EAAE,KAAY,EAAE,IAAQ,EAAE,OAAW,EAAE,MAAU;;QACtF,IAAI;YACH,yBAAyB;YACxB,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YACpC,MAAM,SAAS,GAAQ,MAAM,qBAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,EAAC,IAAI,EAAC,CAAC,EAAE,IAAI,CAAC,CAAA;YACzE,IAAG,SAAS,EAAC;gBACZ,MAAM,SAAS,GAAI,MAAM,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,EAAC,IAAI,EAAC,SAAS,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAA;gBAC5E,OAAO,CAAC,SAAS,CAAC,CAAC;aAEpB;SAEH;QAAC,OAAO,KAAK,EAAE;YACZ,IAAG,KAAK,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,CAAC,UAAU,IAAI,4BAA4B,EAAE;gBAC1E,gCAAgC;gBAChC,OAAO,MAAM,CAAC,EAAC,GAAG,EAAC,mFAAmF,EAAC,CAAC,CAAA;aAC3G;YACC,MAAM,CAAC,CAAC,CAAC,CAAA;YACV,OAAO,KAAK,CAAC;SACjB;IAGT,CAAC;CAAA;AArBD,8CAqBC","sourcesContent":["import * as store from '../../../store/postgres'\nimport { FixingsErrors } from './index'\nexport async function midlleHandleError(e:any, table:string, data:any, resolve:any, reject:any) {\n        try {\n         //Fixing Email duplicated\n          const list = await store.list(table)\n          const responFix: any = await FixingsErrors(Object.assign(e, {list}), data)\n           if(responFix){\n            const newRespon =  await store.upsert(table, {data:responFix,type:data.type})\n             resolve(newRespon);\n         \n           }\n\n        } catch (error) {\n            if(error.code == '23505' && error.constraint == 'uq_personas_identification' ){\n                //Error identificación duplicada\n                return reject({msg:'Numero de identificación registrado anteriormente, no se puede volver a registrar'})\n            }\n              reject(e)\n             return false;  \n        }\n        \n      \n}"]}