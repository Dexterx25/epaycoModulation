{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/authorizations/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,mDAA8C;AAC9C,uEAA8C;AAE9C,gEAA+B;AAG/B,MAAM,MAAM,GAAG,cAAM,CAAC,GAAG,CAAC,MAAM,CAAC;AAEjC,SAAsB,IAAI,CAAC,IAAQ;;QAClC,OAAQ,MAAO,sBAAG,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;IACtC,CAAC;CAAA;AAFD,oBAEC;AAED,SAAsB,MAAM,CAAE,KAAS;;QACrC,OAAQ,MAAM,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;IACzC,CAAC;CAAA;AAFD,wBAEC;AAEY,QAAA,KAAK,GAAS;IACvB,GAAG,EAAE,UAAe,GAAW,EAAE,GAAY,EAAE,KAAS;;YACvD,MAAM,OAAO,GAAS,MAAM,YAAY,CAAC,GAAG,CAAC,CAAC;YAE/C,qBAAqB;YACrB,IAAI,OAAO,CAAC,EAAE,KAAK,KAAK,EAAE;gBACtB,OAAO,EAAC,KAAK,EAAC,cAAc,EAAE,UAAU,EAAC,GAAG,EAAC,CAAA;aAChD;QACJ,CAAC;KAAA;IAEE,MAAM,EAAE,UAAe,GAAW,EAAE,GAAY;;YAC5C,IAAI;gBACA,MAAM,OAAO,GAAG,MAAM,YAAY,CAAC,GAAG,CAAC,CAAC;gBACxC,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAA;gBAC3C,OAAO,EAAC,aAAa,EAAC,OAAO,EAAC,CAAC;aAClC;YAAC,OAAO,KAAK,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAC,KAAK,CAAC,OAAO,CAAC,CAAA;gBAC7C,QAAQ,KAAK,CAAC,OAAO,EAAE;oBACnB,KAAK,eAAe;wBAChB,MAAM,gBAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAC,GAAG,EAAC,iBAAiB,EAAC,EAAE,EAAC,UAAU,EAAC,GAAG,EAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;wBAChF,MAAM;oBAEV;wBACI,MAAM;iBACb;aACJ;QACL,CAAC;KAAA;CACJ,CAAA;AAED,SAAsB,QAAQ,CAAC,IAAQ;;QACnC,IAAG,CAAC,IAAI,EAAC;YACL,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAA;YAC9B,OAAO,CAAC,EAAC,KAAK,EAAC,mBAAmB,EAAE,UAAU,EAAC,GAAG,EAAC,CAAC,CAAA;SACvD;QAED,IAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAA;YAC7B,OAAO,CAAC,EAAC,KAAK,EAAC,kBAAkB,EAAE,UAAU,EAAC,GAAG,EAAC,CAAC,CAAA;SAEtD;QAED,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAExC,OAAO,KAAK,CAAA;IAEhB,CAAC;CAAA;AAhBD,4BAgBC;AAED,SAAsB,YAAY,CAAC,GAAO;;QACtC,MAAM,EAAC,OAAO,EAAE,KAAK,EAAC,GAAG,GAAG,CAAA;QAC5B,MAAM,aAAa,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,IAAI,EAAE,CAAC;QACrE,MAAM,QAAQ,GAAG,MAAO,QAAQ,CAAC,aAAa,CAAC,CAAA;QAC/C,MAAM,OAAO,GAAG,MAAO,MAAM,CAAC,QAAQ,CAAC,CAAA;QAEvC,GAAG,CAAC,IAAI,GAAG,OAAO,CAAA;QAErB,OAAO,OAAO,CAAC;IAChB,CAAC;CAAA;AATD,oCASC","sourcesContent":["import {config} from '../configurations/index'\nimport errors from '../utils/responses/errors'\nimport {Request, Response} from 'express'\nimport jwt from 'jsonwebtoken';\nimport {decode} from 'jsonwebtoken'\n\nconst SECRET = config.jwt.secret;\n\nexport async function sign(data:any){\n return  await  jwt.sign(data, SECRET)\n}\n\nexport async function verify (token:any){\n  return  await jwt.verify(token, SECRET)\n}\n\nexport const cheak : any = {\n    own: async function(req:Request, res:Response, owner:any){\n     const decoded : any = await decodeHeader(req);\n\n    //VERIFY IF IS OWNER:\n    if (decoded.id !== owner) {\n        return {error:'Not is Owner', statusCode:400}\n    }\n },\n\n    logged: async function(req:Request, res:Response){\n        try {\n            const decoded = await decodeHeader(req);\n            console.log('DECODED LOGEDD---->', decoded)\n            return {token_decoded:decoded};\n        } catch (error) {\n            console.log('error LOGGED--->',error.message)\n            switch (error.message) {\n                case 'jwt malformed':\n                    await errors(Object.assign({msg:'Token No Válido'}, {statusCode:400}), req, res)\n                    break;\n            \n                default:\n                    break;\n            }\n        }\n    }\n}\n\nexport async function getToken(auth:any){ \n    if(!auth){\n        console.log('Noy bring token')\n        return ({error:\"Don`t bring Token\", statusCode:401})\n    }\n\n    if(auth.indexOf(\"Bearer \") === -1){\n        console.log('invalid Format')\n        return ({error:\"Formato inválido\", statusCode:401})\n\n    }\n\n    let token = auth.replace(\"Bearer \", \"\");\n\n    return token\n\n}\n\nexport async function decodeHeader(req:any){\n    const {headers, token} = req\n    const authorization = !headers ? token : headers.authorization || '';\n    const thetoken = await  getToken(authorization)\n    const decoded = await  verify(thetoken)\n\n    req.user = decoded\n\n return decoded;\n}\n\n"]}